apiVersion: v1
kind: Service
metadata:
  labels:
    app: express-app
  name: express-service-red
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: express-app-red
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: express-app
  name: express-service-green
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: express-app-green
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-app-deployment-red
  labels:
    app: express-app-red
    tier: app
    response: cold
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: app
  template:
    metadata:
      labels:
        app: express-app-red
        tier: app
    spec:
      containers:
        - name: express-app-container
          image: partyk1d24/hello-express:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              protocol: TCP
              name: express-endpnt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-app-deployment-green
  labels:
    app: express-app-green
    tier: app
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: app
  template:
    metadata:
      labels:
        app: express-app-green
        tier: app
    spec:
#      volumes:
#        - name: express-app-storage
#          persistentVolumeClaim:
#            claimName: main-volume-claim
      containers:
        - name: express-app-container
          image: partyk1d24/hello-express:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DEPLOY_TYPE
              value: "Green"
#          volumeMounts:
#            - mountPath: "/var/external"
#              name: express-app-storage
          ports:
              - containerPort: 3000
                protocol: TCP
                name: express-endpnt
